pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = 'github-creds-id'      // Jenkins GitHub credentials
        DOCKER_CREDENTIALS = 'dockerhub-creds-id'   // Jenkins Docker Hub credentials
        DOCKERHUB_USER = 'philipthebackenddeveloper'
        IMAGE_NAME = 'messaging_app'
    }

    stages {

        stage('Checkout Code') {
            steps {
                git branch: 'week9/ci-cd-pipeline',
                    credentialsId: env.GITHUB_CREDENTIALS,
                    url: 'https://github.com/PhilipTheBackendDeveloper/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                cd messaging_app
                python3 -m venv venv
                . venv/bin/activate
                pip install --upgrade pip
                pip install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                cd messaging_app
                . venv/bin/activate
                pytest --maxfail=1 --disable-warnings --junitxml=report.xml
                '''
            }
        }

        stage('Archive Test Report') {
            steps {
                junit 'messaging_app/report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                docker build -t $DOCKERHUB_USER/$IMAGE_NAME:latest ./messaging_app
                '''
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: env.DOCKER_CREDENTIALS,
                                                    usernameVariable: 'DOCKER_USER',
                                                    passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker push $DOCKERHUB_USER/$IMAGE_NAME:latest
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline Finished!'
        }
    }
}
